/*This porject utilizes data from Kaggle. I then created a table to insert the data into.*/
/*Table creation*/

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

/*I then uploaded the Spotify data .csv into the table created and explored the data through the following questions*/

/*Preliminary look*/
SELECT * FROM BIT_DB.Spotifydata;

/*We want a playlist of party songs, so only select songs with above average danceability.*/
SELECT AVG(danceability) FROM BIT_DB.Spotifydata;

SELECT id, artist_name, track_name 
  FROM BIT_DB.Spotifydata
GROUP BY id
HAVING danceability>(SELECT AVG(danceability) FROM BIT_DB.Spotifydata);

/*What are the 3 longest songs in this dataset?*/
SELECT * FROM BIT_DB.Spotifydata 
ORDER BY duration_ms DESC LIMIT 3;

/*What artists are in this table?*/
SELECT DISTINCT artist_name 
FROM BIT_DB.Spotifydata;

/*What artists have more than one song in the table?*/
SELECT artist_name, COUNT(artist_name) AS num_of_songs
FROM BIT_DB.Spotifydata GROUP BY artist_name
HAVING num_of_songs>1
ORDER BY num_of_songs DESC;

/*What were the top 5 most popular songs in the table?*/
SELECT * FROM BIT_DB.Spotifydata 
ORDER BY popularity DESC
LIMIT 5;

/*How long is duration of all the songs in the dataset combined? (Convert to minutes)*/
SELECT SUM(duration_ms)/1000/60 AS duration_min
FROM BIT_DB.Spotifydata; 

/*Calculate the average popularity for the artists in the table*/
/*Then, for every artist with an average popularity of 90 or above, show their name, avg popularity, and label them as a 'Top Star'*/
/*Use a CTE to execute the query*/

WITH avg_popularity_CTE AS(
SELECT DISTINCT artist_name, AVG(popularity) AS arist_avg_popularity
FROM Spotifydata
GROUP BY artist_name
)
SELECT artist_name, artist_avg_popularity, 'Top Star' AS tag
FROM avg_popularity_CTE
WHERE avg_popularity>=90;

